[{"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\index.js":"1","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\reportWebVitals.js":"2","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\App.js":"3","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\Navbar.js":"4","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\TextForm.js":"5","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\About.js":"6","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\Alert.js":"7"},{"size":541,"mtime":1692033600176,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1691947234593,"results":"10","hashOfConfig":"9"},{"size":1625,"mtime":1692692804283,"results":"11","hashOfConfig":"9"},{"size":1897,"mtime":1692693180694,"results":"12","hashOfConfig":"9"},{"size":1976,"mtime":1692693410409,"results":"13","hashOfConfig":"9"},{"size":4487,"mtime":1692291932374,"results":"14","hashOfConfig":"9"},{"size":448,"mtime":1692463374387,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"mf6ka6",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\index.js",[],[],[],"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\reportWebVitals.js",[],[],"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\App.js",[],[],"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\Navbar.js",["41"],[],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.theme} bg-${props.theme}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/about\">About</a>\r\n          </li> */}\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className={`form-check form-switch text-${props.switch}`} >\r\n          <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title : PropTypes.string,\r\n    aboutText: PropTypes.string\r\n}","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\TextForm.js",["42"],[],"import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick = ()=>{\r\n    let newText= text.toUpperCase();\r\n    setText(newText)\r\n    props.showalert(\"Converted to Uppercase\",\"success\");\r\n  }\r\n  \r\n  const handledownclick = ()=>{\r\n    let newText2= text.toLowerCase();\r\n    setText(newText2)\r\n    props.showalert(\"Converted to Lowercase\",\"success\");\r\n  }\r\n  \r\n  const handlecopy = ()=>{\r\n    var text= document.getElementById(\"mybox\");\r\n    text.select()\r\n    navigator.clipboard.writeText(text);\r\n    props.showalert(\"Text Copied\",\"success\");\r\n  }\r\n\r\n\r\n  const handleOnChange=(event)=>{\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const [text,setText] = useState(\"\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.theme==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n\r\n        <div className=\"mb-3\" padding=\"10px\">\r\n            <textarea className=\"form-control\" style={{backgroundColor:props.theme==='dark'?'grey':'white',color:props.theme==='dark'?'white':'black'}} value={text} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n        <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handledownclick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>Copy the Text</button>\r\n        \r\n        </div>\r\n    </div>\r\n\r\n    <div className=\"container my-3\" style={{color:props.theme==='dark'?'white':'black'}}>\r\n      <h2>Your Summary</h2>\r\n      <p>{text.split(\" \").filter((element)=>{return element.length!=0}).length} words and {text.length} characters</p>\r\n      <p>You can read complete paragraph in {0.008 * text.split(\" \").length} minutes</p>\r\n\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter some text to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\About.js",[],[],[],"C:\\Users\\vandit\\OneDrive\\Desktop\\react\\textulits\\src\\components\\Alert.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":9,"column":7,"nodeType":"45","endLine":9,"endColumn":44},{"ruleId":"46","severity":1,"message":"47","line":49,"column":67,"nodeType":"48","messageId":"49","endLine":49,"endColumn":69},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]